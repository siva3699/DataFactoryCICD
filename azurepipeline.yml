# Sample YAML file to validate and export an ARM template into a build artifact
# Requires a package.json file located in the target repository

trigger:
- master #collaboration branch
- release-PROD

pool:
  vmImage: 'ubuntu-latest'

steps:

# Installs Node and the npm packages saved in your package.json file in the build

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(Build.Repository.LocalPath)' #replace with the package.json folder
    verbose: true
  displayName: 'Install npm package'

# Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
# Enter the appropriate subscription and name for the source factory.

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.Repository.LocalPath)' #replace with the package.json folder
    customCommand: 'run build validate $(Build.Repository.LocalPath)/ADF/azure-poc-adf-v2-01 /subscriptions/7cbe6514-3c10-4942-8509-d5f4b2c390c0/resourceGroups/azure-poc-rg-01/providers/Microsoft.DataFactory/factories/azure-poc-adf-v2-01'
  displayName: 'Validate'

# Validate and then generate the ARM template into the destination folder, which is the same as selecting "Publish" from the UX.
# The ARM template generated isn't published to the live version of the factory. Deployment should be done by using a CI/CD pipeline. 

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.Repository.LocalPath)' #replace with the package.json folder
    customCommand: 'run build export $(Build.Repository.LocalPath)/ADF/wa-cip-wus-bss-adfv2-01 /subscriptions/a486ec76-63fc-4eff-989b-f46990a42a2e/resourceGroups/wa-cip-dev-wus-bss-rg-01/providers/Microsoft.DataFactory/factories/wa-cip-dev-wus-bss-adfv2-01 "ArmTemplate"'
  displayName: 'Validate and Generate ARM template'

# Publish the artifact to be used as a source for a release pipeline.

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.Repository.LocalPath)'
    contents: '**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
     artifactName: BirchStreetSystemsDW.$(Build.BuildNumber)
